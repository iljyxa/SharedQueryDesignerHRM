// Copyright (c) 2025 Ilya Fedorov
// SPDX-License-Identifier: MIT
// https://github.com/iljyxa/SharedQueryDesignerHRM

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОписанияПредставлений = ОбработкаОбъект.ОписанияПредставленийПоКонфигурации();
	ОбработкаОбъект.Импортировать(ОписанияПредставлений);
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
	МодульОбщегоНазначения = ОбработкаОбъект.МодульОбщегоНазначения();
	
	Для Каждого СтрокаТаблицы Из Объект.Параметры Цикл
		СтрокаТаблицы.Типы = МодульОбщегоНазначения.ЗначениеИзСтрокиXML(СтрокаТаблицы.ДоступныеТипы);
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДоступныеПредставления

&НаКлиенте
Процедура ДоступныеПредставленияПриАктивизацииСтроки(Элемент)
	ОтключитьОбработчикОжидания("ПриАктивизацииПредставления");
	ПодключитьОбработчикОжидания("ПриАктивизацииПредставления", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПриАктивизацииПредставления()
	
	ТекущиеДанные = Элементы.ДоступныеПредставления.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		ОтборСтрок = Новый ФиксированнаяСтруктура("ИдентификаторПредставления", Неопределено);
		
		Элементы.ДоступныеПоля.Доступность = Ложь;
		Элементы.ДоступныеПараметры.Доступность = Ложь;																	 
	Иначе
		ОтборСтрок = Новый ФиксированнаяСтруктура("ИдентификаторПредставления", ТекущиеДанные.ИдентификаторПредставления);
		
		Элементы.ДоступныеПоля.Доступность = Истина;
		Элементы.ДоступныеПараметры.Доступность = Истина;
	КонецЕсли;
	
	Элементы.ДоступныеПоля.ОтборСтрок = ОтборСтрок;
	Элементы.ДоступныеПараметры.ОтборСтрок = ОтборСтрок;
			
КонецПроцедуры

&НаКлиенте
Процедура ДоступныеПредставленияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.ИдентификаторПредставления = Новый УникальныйИдентификатор();
	ИначеЕсли Копирование Тогда
		// TODO: Реализовать копирование
	Иначе
		// Обработка не требуется
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДоступныеПараметры

&НаКлиенте
Процедура ДоступныеПараметрыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.ИдентификаторПредставления = Элементы.ДоступныеПредставления.ТекущиеДанные.ИдентификаторПредставления;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДоступныеПараметрыТипыПриИзменении(Элемент)
	ДоступныеПараметрыТипыПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДоступныеПоля

&НаКлиенте
Процедура ДоступныеПоляПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.ИдентификаторПредставления = Элементы.ДоступныеПредставления.ТекущиеДанные.ИдентификаторПредставления;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьКак(Команда)
	АдресВоВременномХранилище = ЭкспортироватьОписание();
	ПараметрыСохранения = ФайловаяСистемаКлиент.ПараметрыСохраненияФайла();
	ПараметрыСохранения.Диалог.Фильтр = "Файл описаний представлений (*.xml)|*.xml";
	ОписаниеОповещения = Новый ОписаниеОповещения("СохранитьКакЗавершение", ЭтотОбъект); 
	ФайловаяСистемаКлиент.СохранитьФайл(ОписаниеОповещения, АдресВоВременномХранилище, "Описания представлений ЗУП.xml", ПараметрыСохранения);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДоступныеПараметрыТипыПриИзмененииНаСервере()
	
	Если Элементы.ДоступныеПараметры.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Объект.Параметры.НайтиПоИдентификатору(Элементы.ДоступныеПараметры.ТекущаяСтрока);
	
	ТекущиеДанные.ДоступныеТипы = РеквизитФормыВЗначение("Объект").МодульОбщегоНазначения().ЗначениеВСтрокуXML(ТекущиеДанные.Типы);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьКакЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

&НаСервере
Функция ЭкспортироватьОписание()
	
	
	
КонецФункции

&НаКлиенте
Процедура ОткрытьФайл(Команда)
	
	ПараметрыЗагрузки = ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла();
	ПараметрыЗагрузки.ИдентификаторФормы = УникальныйИдентификатор;
	ПараметрыЗагрузки.Диалог.Фильтр = "Файл описаний представлений (*.xml)|*.xml";
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьФайлЗавершение", ЭтотОбъект);
	
	ФайловаяСистемаКлиент.ЗагрузитьФайл(ОписаниеОповещения, ПараметрыЗагрузки);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлЗавершение(ПомещенныйФайл, ДополнительныеПараметры) Экспорт
	
	Если ПомещенныйФайл = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмпортироватьФайл(ПомещенныйФайл.Хранение);
	
КонецПроцедуры

&НаСервере
Процедура ИмпортироватьФайл(АдресВоВременномХранилище)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ИмпортироватьИзXML(АдресВоВременномХранилище);
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
	МодульОбщегоНазначения = ОбработкаОбъект.МодульОбщегоНазначения();
	
	Для Каждого СтрокаТаблицы Из Объект.Параметры Цикл
		СтрокаТаблицы.Типы = МодульОбщегоНазначения.ЗначениеИзСтрокиXML(СтрокаТаблицы.ДоступныеТипы);
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти


